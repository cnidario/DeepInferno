[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
uniform float scale = 5.0;

vec3 rgb2hsl(vec3 rgb) {
	float maxi = max(rgb.x, max(rgb.y, rgb.z));
	float mini = min(rgb.x, min(rgb.y, rgb.z));
	float luminance = (maxi + mini)*0.5;
	float saturation;
	if(luminance < 0.5) {
		saturation = (maxi-mini)/(maxi+mini);
	} else {
		saturation = (maxi-mini)/(2.0-maxi-mini);
	}
	float hue;
	if(maxi == rgb.x) {
		hue = rgb.g - rgb.b;
	} else if(maxi == rgb.y) {
		hue = 2.0 + rgb.b - rgb.r;
	} else {
		hue = 4.0 + rgb.r - rgb.g;
	}
	hue = hue/(maxi-mini);
	return vec3(hue, saturation, luminance);
}

float lerp(float x, float c) {
	return x + (1. - x)*c;
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	float t = mod(TIME*scale, 1.0);
	color = vec4(lerp(color.r, t), lerp(color.g, t), lerp(color.b, t),color.a); 
	COLOR = color;
}"

[resource]
shader = SubResource( 4 )
shader_param/scale = 5.0
